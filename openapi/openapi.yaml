openapi: 3.0.0
info:
  title: nijisongs-api
  description: にじさんじライバーの歌動画とライバー情報を扱う
  version: 1.0.0
servers:
  - url: http://localhost:8081
    description: Development server
paths:
  /youtube/search:
    get:
      tags:
        - youtube
      summary: 動画ID取得
      description: Youtube Data API を使って、にじさんじの歌動画に関連する動画IDを取得する<br> publishedは動画がアップロードされた時間(公開日ではない)<br>
        publishedの形式は(2021-01-01T00:00:00Z)<br>
        publishedを指定しない場合、実行したその日の(JST)0:00~23:59の時間帯にアップロードされた動画IDを取得する
      parameters:
        - name: publishedAfter
          in: query
          description: 指定された日時より後にアップロードされた動画を取得
          schema:
            type: string
        - name: publishedBefore
          in: query
          description: 指定された日時より前にアップロードされた動画を取得
          schema:
            type: string
      responses:
        '200':
          description:
            publishedAfter=2021-01-01T00:00:00Z<br>
            publishedBefore=2021-01-02T06:00:00Z の場合
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  - 8lWZpNjntU8
                  - yBU8FDYR3_Q
          
  /youtube/activities:
    get:
      tags:
        - youtube
      summary: 動画ID取得
      description: 
        指定されたチャンネルと期間から投稿された動画IDを取得する<br>
        datetimeを両方指定しない場合、現在から7時間前の期間を取得する<br>
        原因が分からないが、プレミアム公開(公開予約)の動画IDの取得ができないため、既に公開された動画IDを取得する際に使用した方が良い
      parameters: 
        - name: channelId
          in: query
          required: true
          description: コンマ区切りで指定可能(UCX7YkU9nEeaoZbkVLVajcMg, ...)
          schema:
            type: string
        - name: datetimeAfter
          in: query
          description: データ形式(2021-01-01T00:00:00Z)
          schema:
            type: string
        - name: datetimeBefore
          in: query
          description: データ形式(2021-01-01T00:00:00Z)
          schema:
            type: string
      responses:
        '200':
          description: channelId=UCX7YkU9nEeaoZbkVLVajcMg datetimeAfter=2021-01-01T00:00:00Z datetimeBefore=2021-01-02T00:00:00Z の場合
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  - IGvDbjMukdQ
                  - 0fLDi5tlYew
                  
  /youtube/videos:
    get:
      tags:
        - youtube
      summary: 動画詳細データを取得
      description:
        動画IDから動画の詳細データを取得する<br>
        また、歌動画か判定されたデータ(songConfirm)と歌動画かもしれないデータ(unSongConfirm)だけ取得することも可能<br>
      parameters: 
        - name: videoId
          in: query
          required: true
          schema:
            type: string
        - name: select
          in: query
          description: 歌動画か判定するのか(select指定するにはpartを指定しない or partにsnippetを指定する必要がある)
          schema:
            type: boolean
        - name: part
          in: query
          description: 取得するデータの部分を指定(snippet, contentDetails, statistics, ...) 指定しない場合、全てのデータを取得する
          schema:
            type: string
      responses:
        '200':
          description: 
            select=trueにするとsongConfirm[], unSongConfirm[]が取得できる<br>
            select=false(or 指定しない)とresultのみ取得できる
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/youtube'
                  songConfirm:
                    type: array
                    items:
                      $ref: '#/components/schemas/youtube'
                  unSongConfirm:
                    type: array
                    items:
                      $ref: '#/components/schemas/youtube'
                      
  /videos:
    get:
      tags:
        - video
      summary: 動画詳細データを取得
      description:
        DBに保存されている動画詳細データを取得する<br>
        データの順番は再生回数が多い順に取得される
      parameters:
        - name: id
          in: query
          description: 取得したい動画IDを指定　コンマ区切りで複数指定できる
          schema:
            type: string
        - name: songConfirm
          in: query
          description: 歌動画(true)か歌動画かもしれない(false)データのみ取得することができる　指定しない場合、全てのデータを返す
          schema:
            type: boolean
        - name: checkSongVtuber
          in: query
          description: 出演しているVtuberライバーを確認したデータ(true)、確認していないデータ(false)のみ取得することができる　指定しない場合、全てのデータを返す
          schema:
            type: boolean
        - name: maxResult
          in: query
          description: 取得するデータの数を指定できる　指定しない場合、全てのデータを返す
          schema:
            type: integer
        - name: page
          in: query
          description: 取得するデータのページを指定できる　指定しない場合、最初のページのデータを返す
          schema:
            type: integer
        - name: createdAtAfter
          in: query
          description:
            指定された時間より後に公開するデータを取得<br>
            データ形式(2021-01-01T00:00:00Z)
          schema:
            type: string
        - name: createdAtBefore
          in: query
          description:
            指定された時間より前に公開するデータを取得<br>
            データ形式(2021-01-01T00:00:00Z)
          schema:
            type: string
      responses:
        '200':
          description: 取得結果
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/video'
    post:
      tags:
        - video
      summary: 動画詳細データを保存
      description:
        動画詳細データをDBに保存する<br>
        保存する際、動画詳細データから出演Vライバーを抽出し、そのデータもDBに保存する
      requestBody: # リクエストボディ
        description: youtube/videosから取得したデータ
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                result:
                  type: array
                  items:
                    $ref: '#/components/schemas/youtube'
                songConfirm:
                  type: array
                  items:
                      $ref: '#/components/schemas/youtube'
                unSongConfirm:
                  type: array
                  items:
                    $ref: '#/components/schemas/youtube'
      responses:
        '201':
          description: success
    
    put:
      tags:
        - video
      summary: 動画詳細データの更新
      description:
        動画詳細データが、歌ってみた動画であることが確定した時、songConfirmをTrueに更新する<br>
        また、その動画に出演しているVライバーを編集し、出演一覧が確定した時、checkSongVtuberをTrueに変更する
      requestBody:
        description: videoIdは動画ID
        content:
          application/json:
            schema:
              type: object
              properties:
                videoId:
                  type: string
                songConfirm:
                  type: boolean
                checkSongVtuber:
                  type: boolean
      responses:
        '201':
          description: 更新に成功すると、動画詳細データの一部を返す
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  description:
                    type: string
                  startTime:
                    type: string
                  createdAt:
                    type: string
                  songConfirm:
                    type: boolean
                  checkSongVtuber:
                    type: boolean
    
    delete:
      tags:
        - video
      summary: 動画詳細データの削除
      parameters:
        - name: id
          in: query
          required: true
          description: 削除したい動画のIDを指定　コンマ区切りで複数指定できる
          schema:
            type: string
      responses:
        '201':
          description: DELETED
  
  /videos/viewCount:
    put:
      tags:
        - video
      summary: 動画の視聴回数を更新
      description:
        歌動画の視聴回数をYoutube APIから取得し、DBに保存されている動画詳細データの視聴回数を上書きする
      responses:
        '201':
          description: updated
  
  /video/songVtuber:
    put:
      tags:
        - video
      summary: 歌動画に出演しているVtuber一覧を編集
      description: 
        typeに指定するinitは歌動画に出演しているVtuber一覧を削除しリクエスト内容を上書き保存する<br>
        updateは上書きせず、リクエスト内容を追加し保存する
      parameters:
        - name: type
          in: query
          required: true
          description: init or update を指定する 
          schema:
            type: string
      requestBody:
        description: user to create
        content:
          application/json:
            schema:
              type: object
              properties:
                videoId:
                  type: string
                joinVtuber:
                  type: array
                  items:
                    type: object
                    properties:
                      channelId:
                        type: string
                      role:
                        type: string
      responses:
        '201':
          description: UPDATED
    
    delete:
      tags:
        - video
      summary: 歌動画に出演しているVtuber一覧を削除
      description: チャンネルIDと動画IDを指定することで、動画に出演しているVtuber一覧の一部を削除することができる
      parameters:
        - name: channelId
          in: query
          required: true
          description: コンマ区切りで複数指定可能
          schema:
            type: string
        - name: videoId
          in: query
          required: true
          description: コンマ区切りで複数指定可能
          schema:
            type: string
      responses:
        '201':
          description: DELETED
          
  /vtuber:
    get:
      tags:
        - vtuber
      summary: Vtuber情報を取得
      description:
        DBに保存してあるVtuberデータを取得<br>
        パラメータを指定することで、その条件に合ったデータのみ取得することができる<br>
        指定しない場合、全てのデータを返す
      parameters:
        - name: affiliation
          in: query
          description: 所属を指定できる(にじさんじ, にじさんじKR, にじさんじ卒業, ...)
          schema:
            type: string
        - name: name
          in: query
          description: 名前を指定できる(完全一致な名前)
          schema:
            type: string
        - name: channelId
          in: query
          description: チャンネルIDを指定
          schema:
            type: string
      responses:
        '200':
          description: 取得結果
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/vtuber'
                  
    post:
      tags:
        - vtuber
      summary: 動画詳細データを保存
      description:
        動画詳細データをDBに保存する<br>
        保存する際、動画詳細データから出演Vライバーを抽出し、そのデータもDBに保存する
      requestBody:
        description: user to create
        content:
          application/json:
            schema:
              type: object
              properties:
                channelId:
                  type: string
                name:
                  type: string
                readname:
                  type: string
                affiliation:
                  type: string
                birthday:
                  type: string
                image:
                  type: string
      responses:
        '201':
          description: CREATED
    
    put:
      tags:
        - vtuber
      summary: vtuber情報を編集
      description: aaa
      requestBody:
        description: user to create
        content:
          application/json:
            schema:
              type: object
              properties:
                channelId:
                  type: string
                name:
                  type: string
                readname:
                  type: string
                affiliation:
                  type: string
                birthday:
                  type: string
                image:
                  type: string
                  
      responses:
        '201':
          description: UPDATED
          
components:
  schemas:
    youtube:
      type: object
      properties:
        kind:
          type: string
        etag:
          type: string
        id:
          type: string
        snippet:
          type: object
        contentDetails:
          type: object
        statistics:
          type: object
        liveStreamingDetails:
          type: object
            
    statistic:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        viewCount:
          type: integer
        likeCount:
          type: integer
        dislikeCount:
          type: integer
        commentCount:
          type: integer
    
    thumbnail:
      type: object
      properties:
        id:
          type: string
        defaultUrl:
          type: string
        medium:
          type: string
        high:
          type: string
        standard:
          type: string
        maxres:
          type: string
          
    songVtuber:
      type: object
      properties:
        role:
          type: string
        vtuber:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            image:
              type: string
        
    video:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        startTime:
          type: string
        createdAt:
          type: string
        songConfirm:
          type: boolean
        checkSongVtuber:
          type: boolean
        thumbnail:
          $ref: '#/components/schemas/thumbnail'
        statistic:
          $ref: '#/components/schemas/statistic'
        songVtuber:
          type: array
          items:
            $ref: '#/components/schemas/songVtuber'
    
    vtuber:
      type: object
      properties:
        id: 
          type: string
        name:
          type: string
        readname:
          type: string
        affiliation:
          type: string
        birthday:
          type: string
        image:
          type: string
        songVtuber:
          type: array
          items:
            type: object
            properties:
              videoId:
                type: string
              role:
                type: string
              videos:
                type: object
                properties:
                  title:
                    type: string
                  startTime:
                    type: string
                  thumbnail:
                    $ref: '#/components/schemas/thumbnail'
            
    vtuberImage:
      type: object
      properties:
        channelId:
          type: string
        poster:
          type: string
        type:
          type: string
        url:
          type: string
        
            
        
tags:
  - name: youtube
    description: Access to youtube
  - name: video
    description: Access to video
  - name: vtuber
    description: Access to vtuber